openapi: 3.0.2
info:
  title: API Documentation
  version: 1.0.0
servers:
  - url: http://localhost:8090/sunbelt/
tags:
  - name: Sunbelt
    description: Endpoints for user customer
paths:
  /customer:
    post:
      tags:
        - Customer
      summary: Customer
      description: Consult basic information about a Customer
      operationId: getCustomer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
      responses:
        200:
          description: Customer data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
        400:
          description: Bad Request - If the data in the request is not correct, return INVALID_PARAMETERS.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        404:
          description: Not Found - If the user not found return CUSTOMER_NOT_FOUND.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
        500:
          description: Internal Server Error - Use it as a General System Error, return INTERNAL_SERVER_ERROR.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorObject'
components:
  schemas:
    # Objects
    ErrorObject:
      type: object
      additionalProperties: false
      properties:
        code:
          type: string
          description: Error code
          example: "INVALID_PARAMETERS"
        message:
          type: string
          description: Error message (detailed description)
          example: Invalid Request. Please, check the data in the request (QueryString Parameters and/or Body).
      description: Error details
      example:
        code: "INVALID_PARAMETERS"
        message: Invalid Request. Please, check the data in the request (QueryString Parameters and/or Body).
    UserRequest:
      required:
        - documentType
        - documentNumber
      type: object
      properties:
        documentType:
          type: string
          description: Type of document, can be ID or passport
          example: c
        documentNumber:
          type: string
          description: Document number
          example: 123456OP
    UserResponse:
      type: object
      properties:
        firstName:
          type: string
          description: The first name of the user
        secondName:
          type: string
          description: The second name of the user
        surname:
          type: string
          description: The surname of the user
        secondSurname:
          type: string
          description: The second surname of the user
        phone:
          type: string
          description: The phone number of the user
        address:
          type: string
          description: The address of the user
        city:
          type: string
          description: The city of the user
      example:
        firstName: "John"
        secondName: "Doe"
        surname: "Smith"
        secondSurname: "Johnson"
        phone: "123-456-7890"
        address: "123 Main St"
        city: "Springfield"
